一、简答题
1、当我们点击按钮的时候动态给 data 增加的成员是否是响应式数据，如果不是的话，如何把新增成员设置成响应式数据，它的内部原理是什么。
let vm = new Vue({
 el: '#el'
 data: {
  o: 'object',
  dog: {}
 },
 method: {
  clickHandler () {
   // 该 name 属性是否是响应式的
   this.dog.name = 'Trump'
  }
 }
})

答：
不是响应式数据，可以使用 Vue.set 或者 this.$set 将新增成员设置成响应式数据。
Vue.set(this.dog, 'name', 'Trump')

 

2、请简述 Diff 算法的执行过程

diff 算法是用于比较新旧两个相同的 vnode 之间的差异，它接收新旧 vnode 的子节点，进行同级遍历比较：
1. 初始化新旧开始索引为0， 结束索引为新旧子节点的最后一个元素的下标
2. 如果新旧开始和结束索引对应的节点为 null，开始节点+1，结束节点-1
3. 如果新旧节点都不为null，开始比较
4. 首选比较新旧子节点的开始索引对应的节点，如果新旧开始节点为相同节点，则调用patchVnode进行比较修改，然后对新旧开始节点进行重新赋值，赋值为下一个节点
5. 如果新旧开始节点不同，比较新旧结束节点，如果是相同节点，则调用patchVnode进行比较修改，然后对新旧结束节点进行重新赋值，赋值为上一个节点
6. 如果新旧结束节点不同，比较新开始节点和旧结束节点，如果是相同节点，则调用patchVnode进行比较修改，然后赋值新开始节点为下一个节点，赋值旧结束节点为上一个节点















 

二、编程题
1、模拟 VueRouter 的 hash 模式的实现，实现思路和 History 模式类似，把 URL 中的 # 后面的内容作为路由的地址，可以通过 hashchange 事件监听路由地址的变化。
 
hash模式：
通过location.hash修改hash，触发更新；
通过监听hashchange事件监听浏览器前进或后退，触发更新。

history模式：
通过history.pushState修改浏览器地址，触发更新；
通过监听popstate事件监听浏览器前进或后退，触发更新。


2、在模拟 Vue.js 响应式源码的基础上实现 v-html 指令，以及 v-on 指令。